{"version":3,"sources":["components/Todo/NewTodo.jsx","store/reducers/todos.js","store/action-types.js","store/reducers/index.js","components/Todo/todoService.js","constants/colors.js","components/ColorOptions.jsx","components/Todo/TodoCardFooter.jsx","components/Todo/TodoHeader.jsx","components/Todo/TodoBody.jsx","components/Todo/TodoCard.jsx","components/Todo/TodoPlaceHolder.jsx","components/Todo/Todos.jsx","App.jsx","serviceWorker.js","index.js"],"names":["WrappedComponent","addTodo","payload","type","initialState","list","id","name","content","hasBullets","newTodo","todos","state","action","reduce","a","b","newList","map","item","filter","todo","rootReducer","combineReducers","setBullet","t","Object","assign","includes","replace","startsWith","COLORS","hex","ColorOptions","className","this","props","visibleColor","color","styling","borderColor","backgroundColor","key","title","style","onClick","setColor","aria-label","React","Component","TodoCardFooter","setState","Fragment","toggleBullets","deleteTodo","isChanged","undo","close","TodoHeader","html","onChange","event","target","value","onFocus","setActive","onBlur","TodoBody","innerRef","targetRef","TodoCard","isNew","handleClickOutside","e","isActive","cardRef","current","contains","contentActive","titleActive","updateTodo","originalTodo","done","createRef","inputRef","bind","document","addEventListener","range","createRange","sel","window","getSelection","setStart","collapse","removeAllRanges","addRange","focus","removeEventListener","changed","ref","connect","dispatch","TodoPlaceHolder","handleChange","ElementType","NewTodo","updateNewTodo","Todos","App","Boolean","location","hostname","match","store","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b25ece33.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport TodoPlaceHolder from './TodoPlaceHolder';\r\nimport TodoCard from './TodoCard';\r\nimport { connect } from 'react-redux';\r\nimport { addTodo, updateNewTodo } from '../../store/reducers/todos';\r\n\r\nconst mapStateToProps = state => ({\r\n  newTodo: state.todos.newTodo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addTodo: todo => dispatch(addTodo(todo)),\r\n    updateNewTodo: todo => dispatch(updateNewTodo(todo))\r\n  };\r\n};\r\n\r\nconst withTodoPlaceholder = WrappedComponent => props => {\r\n  return !props.todo.content ? (\r\n    <TodoPlaceHolder {...props} />\r\n  ) : (\r\n    <WrappedComponent {...props} />\r\n  );\r\n};\r\n\r\nconst ElementType = withTodoPlaceholder(TodoCard);\r\n\r\nclass NewTodo extends Component {\r\n  render() {\r\n    return (\r\n      <ElementType\r\n        todo={this.props.newTodo}\r\n        onChange={todo => this.props.updateNewTodo(todo)}\r\n        done={todo => this.props.addTodo(todo)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTodo);\r\n","import * as Constants from '../action-types';\r\n\r\nexport const addTodo = payload => ({\r\n  type: Constants.ADD_TODO,\r\n  payload\r\n});\r\n\r\nexport const updateTodo = payload => ({\r\n  type: Constants.UPDATE_TODO,\r\n  payload\r\n});\r\n\r\nexport const deleteTodo = payload => ({\r\n  type: Constants.DELETE_TODO,\r\n  payload\r\n});\r\n\r\nexport const updateNewTodo = payload => ({\r\n  type: 'UPDATE_NEW_TODO',\r\n  payload\r\n});\r\n\r\nconst initialState = {\r\n  list: [\r\n    {\r\n      id: 1,\r\n      name: 'Shopping',\r\n      content:\r\n        '<ul><li>Chicken</li><li>Yogurt</li><li>Milk</li><li>Potatoes</ul>',\r\n      hasBullets: true\r\n    },\r\n    { id: 2, name: 'Book Hair Appointment', content: '<div>Soon!</div>' }\r\n  ],\r\n  newTodo: { name: '', content: '', id: 0 }\r\n};\r\n\r\nconst todos = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Constants.ADD_TODO:\r\n      action.payload.id =\r\n        state.list.reduce((a, b) => (a > b.id ? a : b.id), 0) + 1;\r\n      return {\r\n        ...state,\r\n        list: [action.payload, ...state.list],\r\n        newTodo: { name: '', content: '', id: 0 }\r\n      };\r\n\r\n    case Constants.UPDATE_TODO:\r\n      let newList = state.list.map(item =>\r\n        item.id === action.payload.id ? action.payload : item\r\n      );\r\n      return { ...state, list: newList };\r\n\r\n    case Constants.DELETE_TODO:\r\n      if (action.payload === 0) {\r\n        return { ...state, newTodo: { name: '', content: '', id: 0 } };\r\n      }\r\n      return {\r\n        ...state,\r\n        list: state.list.filter(todo => todo.id !== action.payload)\r\n      };\r\n\r\n    case 'UPDATE_NEW_TODO':\r\n      return { ...state, newTodo: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todos;\r\n","// Todo actions\r\n\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const SET_COLOR = 'SET_COLOR';\r\nexport const EDIT_COLOR = 'EDIT_COLOR';\r\nexport const RESET_TODO = 'RESET_TODO';\r\n\r\n// Editing actions\r\nexport const START_EDIT = 'START_EDIT';\r\nexport const SAVE_EDIT = 'SAVE_EDIT';\r\nexport const CANCEL_EDIT = 'CANCEL_EDIT';\r\nexport const TOGGLE_CHECKED = 'TOGGLE_CHECKED';\r\n","import { combineReducers } from 'redux';\r\nimport todos from './todos';\r\n\r\nconst rootReducer = combineReducers({\r\n  todos\r\n});\r\n\r\nexport default rootReducer;\r\n","export const setBullet = t => {\r\n  let todo = Object.assign({}, t);\r\n  let content = todo.content;\r\n  if (!content) {\r\n    todo.content = '<ul><li></li></ul>';\r\n    return todo;\r\n  }\r\n  if (content.includes('<li>')) {\r\n    content = content.replace(/(<ul>||<\\/ul>)+/g, '');\r\n    content = content.replace(/li>+/g, 'div>');\r\n  } else {\r\n    content = content.replace(/div>+/g, 'li>');\r\n    if (!content.startsWith('<li>')) {\r\n      content = `<li>${content}</li>`;\r\n    }\r\n    content = `<ul>${content}</ul>`;\r\n  }\r\n  todo.content = content;\r\n  return todo;\r\n};\r\n\r\nexport const cleanTodo = t => {\r\n  let todo = Object.assign({}, t);\r\n  let content = todo.content.replace('<li></li>', '');\r\n  content = todo.content.replace('<li><br></li>', '');\r\n  todo.content = content;\r\n  return todo;\r\n};\r\n","export const COLORS = [\r\n  { name: 'white', hex: '#fff' },\r\n  { name: 'orange', hex: '#ffeed1' },\r\n  { name: 'pink', hex: '#ffd6e1' },\r\n  { name: 'purple', hex: '#f3d1ff' },\r\n  { name: 'yellow', hex: '#fdffd1' },\r\n  { name: 'green', hex: '#daffd1' },\r\n  { name: 'teal', hex: '#cdf7f3' },\r\n  { name: 'blue', hex: '#d1d8ff' },\r\n  { name: 'grey', hex: '#c7c7c7' }\r\n];\r\n","import React from 'react';\r\nimport { COLORS } from '../constants/colors';\r\n\r\nexport class ColorOptions extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          'shadow-sm color-options ' + (this.props.visibleColor ? 'shown' : '')\r\n        }>\r\n        {COLORS.map(color => {\r\n          const styling = {\r\n            borderColor: color.hex,\r\n            backgroundColor: color.hex\r\n          };\r\n          return (\r\n            <button\r\n              key={color.hex}\r\n              className='color-button'\r\n              title={color.name}\r\n              style={styling}\r\n              onClick={() => this.props.setColor(color.hex)}\r\n              aria-label={color.name}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { ColorOptions } from '../ColorOptions';\r\n\r\nexport default class TodoCardFooter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visibleColor: false\r\n    };\r\n  }\r\n\r\n  setColor = color => {\r\n    this.props.setColor(color);\r\n    this.setState({ visibleColor: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className='card-footer'>\r\n          <div className='d-inline-flex'>\r\n            <button\r\n              type='button'\r\n              className='todo-card-action'\r\n              onClick={() =>\r\n                this.setState({ visibleColor: !this.state.visibleColor })\r\n              }>\r\n              <i className='mdi mdi-brush' />\r\n            </button>\r\n            <button\r\n              type='button'\r\n              aria-label='Bullet Points'\r\n              onClick={this.props.toggleBullets}\r\n              className='todo-card-action bullets-btn'>\r\n              <i className='mdi mdi-format-list-bulleted' />\r\n            </button>\r\n            <button\r\n              type='button'\r\n              aria-label='Delete'\r\n              onClick={() => this.props.deleteTodo()}\r\n              className='btn todo-card-action'>\r\n              <i className='mdi mdi-delete' />\r\n            </button>\r\n            {this.props.isChanged && (\r\n              <button\r\n                type='button'\r\n                aria-label='Undo'\r\n                onClick={() => this.props.undo()}\r\n                className='todo-card-action'>\r\n                <i className='mdi mdi-undo' />\r\n              </button>\r\n            )}\r\n          </div>\r\n          <button\r\n            type='button'\r\n            aria-label='Save'\r\n            onClick={() => this.props.close()}\r\n            className='btn btn-light close-btn'>\r\n            Ok\r\n          </button>\r\n        </div>\r\n        <ColorOptions\r\n          visibleColor={this.state.visibleColor}\r\n          setColor={color => this.setColor(color)}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ContentEditable from 'react-contenteditable';\r\n\r\nexport default class TodoHeader extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {!this.props.name && (\r\n          <div className='position-absolute new-todo-text todo-placeholder-title'>\r\n            No title set\r\n          </div>\r\n        )}\r\n        <ContentEditable\r\n          html={this.props.name || ''}\r\n          className={'card-title h5'}\r\n          onChange={event => this.props.onChange(event.target.value)}\r\n          onFocus={() => this.props.setActive(true)}\r\n          onBlur={() => this.props.setActive(false)}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ContentEditable from 'react-contenteditable';\r\n\r\nexport const TodoBody = props => (\r\n  <ContentEditable\r\n    html={props.content}\r\n    innerRef={props.targetRef}\r\n    className={'card-text'}\r\n    onChange={event => props.onChange(event.target.value)}\r\n    onFocus={() => props.setActive(true)}\r\n    onBlur={() => props.setActive(false)}\r\n  />\r\n);\r\n","import React, { Component } from 'react';\r\nimport { addTodo, updateTodo, deleteTodo } from '../../store/reducers/todos';\r\nimport { connect } from 'react-redux';\r\nimport { setBullet } from './todoService';\r\nimport TodoCardFooter from './TodoCardFooter';\r\nimport TodoHeader from './TodoHeader';\r\nimport { TodoBody } from './TodoBody';\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: state.todos.list\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addTodo: todo => dispatch(addTodo(todo)),\r\n    updateTodo: todo => dispatch(updateTodo(todo)),\r\n    deleteTodo: id => dispatch(deleteTodo(id))\r\n  };\r\n};\r\n\r\nclass TodoCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.cardRef = React.createRef();\r\n    this.inputRef = React.createRef();\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n    this.state = {\r\n      originalTodo: { ...this.props.todo },\r\n      titleActive: false,\r\n      contentActive: false\r\n    };\r\n  }\r\n\r\n  // Initition\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClickOutside);\r\n\r\n    const current = this.inputRef.current;\r\n    if (this.isNew() && current) {\r\n      const range = document.createRange();\r\n      var sel = window.getSelection();\r\n      range.setStart(current, 1);\r\n      range.collapse(true);\r\n      sel.removeAllRanges();\r\n      sel.addRange(range);\r\n      current.focus();\r\n    }\r\n  }\r\n\r\n  isNew = () => this.props.todo.id === 0;\r\n\r\n  // Destruction\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  // close todo if leaving focus\r\n  handleClickOutside = e => {\r\n    // If this todo is active, and the card doesn't contain the cliched element, accept changes.\r\n    if (this.isActive() && !this.cardRef.current.contains(e.target)) {\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  isActive = () => this.state.contentActive || this.state.titleActive;\r\n\r\n  undo = () => {\r\n    this.props.updateTodo(this.state.originalTodo);\r\n    this.close();\r\n  };\r\n\r\n  toggleBullets = () => {\r\n    let todo = setBullet(this.props.todo);\r\n    this.onChange(todo);\r\n  };\r\n\r\n  onChange(changed) {\r\n    changed.hasBullets = changed.content.includes('<li>');\r\n    if (this.props.onChange) {\r\n      this.props.onChange(changed);\r\n    } else {\r\n      this.props.updateTodo(changed);\r\n    }\r\n  }\r\n\r\n  isChanged = () =>\r\n    this.props.todo.name !== this.state.originalTodo.name ||\r\n    this.props.todo.content !== this.state.originalTodo.content;\r\n\r\n  close = () => {\r\n    this.setState({ titleActive: false, contentActive: false });\r\n    if (this.props.done) {\r\n      this.props.done(this.props.todo);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let todo = this.props.todo;\r\n    return (\r\n      <div\r\n        ref={this.cardRef}\r\n        className={`todo-card card${this.isActive() ? ' is-editing' : ''}${\r\n          todo.hasBullets ? ' bullets-active' : ''\r\n        }`}\r\n        style={{ backgroundColor: todo.color || '#fff' }}>\r\n        <TodoHeader\r\n          name={todo.name}\r\n          onChange={name => this.onChange({ ...todo, name: name })}\r\n          setActive={state => this.setState({ titleActive: state })}\r\n        />\r\n        <TodoBody\r\n          content={todo.content}\r\n          targetRef={this.inputRef}\r\n          onChange={content => this.onChange({ ...todo, content: content })}\r\n          setActive={state => this.setState({ contentActive: state })}\r\n        />\r\n        <TodoCardFooter\r\n          isChanged={this.isChanged() && !this.isNew()}\r\n          toggleBullets={() => this.toggleBullets()}\r\n          deleteTodo={() => this.props.deleteTodo(todo.id)}\r\n          setColor={color => this.onChange({ ...todo, color: color })}\r\n          undo={() => this.undo()}\r\n          close={() => this.close()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoCard);\r\n","import React, { Component } from 'react';\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { setBullet } from './todoService';\r\n\r\nclass TodoPlaceHolder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Ref is useful for managing focus\r\n    this.inputRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    // puts focus on the ref. Current is the DOM element it's used on\r\n    this.inputRef.current.focus();\r\n  }\r\n\r\n  handleChange = event => {\r\n    let todo = { ...this.props.todo };\r\n    todo.content = event.target.value;\r\n    this.props.onChange(todo);\r\n  };\r\n\r\n  toggleBullets = () => {\r\n    let todo = setBullet(this.props.todo);\r\n    this.props.onChange(todo);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='d-flex card todo-card todo-placeholder'>\r\n        <div className='new-todo-body'>\r\n          <div className='new-todo-text'>\r\n            {!this.props.todo.content && (\r\n              <div className='position-absolute new-todo-text todo-placeholder-title'>\r\n                Write a note!\r\n              </div>\r\n            )}\r\n            <ContentEditable\r\n              html={this.props.todo.content || ''}\r\n              innerRef={this.inputRef}\r\n              className={'new-todo-text new-todo-content'}\r\n              onChange={event => this.handleChange(event)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='new-todo-menu'>\r\n          <button\r\n            type='button'\r\n            aria-label='Bullet Points'\r\n            onClick={this.toggleBullets}\r\n            className={'todo-card-action'}>\r\n            <i className='mdi mdi-format-list-bulleted' />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoPlaceHolder;\r\n","import React, { Component } from 'react';\r\nimport TodoCard from './TodoCard';\r\nimport { connect } from 'react-redux';\r\nimport NewTodo from './NewTodo';\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: state.todos.list\r\n});\r\n\r\nclass Todos extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className='d-flex new-todo-card'>\r\n          <NewTodo />\r\n        </div>\r\n        {this.props.todos.map(todo => (\r\n          <div\r\n            key={todo.id}\r\n            className={'d-inline-flex align-items-start flex-wrap'}>\r\n            <TodoCard todo={todo} />\r\n          </div>\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Todos);\r\n","import React from 'react';\r\nimport Todos from './components/Todo/Todos';\r\n\r\nconst App = () => (\r\n  <div className='App'>\r\n    <main className='mt-4'>\r\n      <div className='container-fluid'>\r\n        <Todos />\r\n      </div>\r\n    </main>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux'\r\nimport rootReducer from './store/reducers';\r\nimport './styles/bootstrap.min.css';\r\nimport './styles/index.scss';\r\nimport './styles/todo.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}